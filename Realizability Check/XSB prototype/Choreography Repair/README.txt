Requirements:
-------------

- XSB logic programming system (http://xsb.sourceforge.net/)
  - tested in XSB v3.3.7

- Graphviz/dot graph visualization package 
  - tested on graphviz v2.30.1 
- dot must be available in the path  

Organization:
-------------
project.P - given a goal (gtrans, start and peers), generate the ptrans relation for the
            peers.

deter.P - determinize ptranswep to generate ptrans

sys.P - given the peer transition relation (ptrans), generate the system transition relations

library.P - helper relations
            - assertOnce
            - strantWOepsilon
            - retractPeers
            - assertNewTrans (goal transitions: gtrans_1 -> gtrans for unrealizable to realizable)
 	    

unrealize.P - give a goal, change it if it is not realizable

nsim.P - not simulation equivalent, first argument system, second argument goal.

draw.P - draw module 

repair.P - top-level

xsboutputs/* - specold.P, specnew.P, peersold.P, peersnew.P generated by the software

dotoutputs/* - specold, specnew, peersold, peersdold, peersnew, peersdnew dot and pdf files generated by the software
               (peersdold, peersdnew are determinized versions of peersold and peersnew)

examples/* - example choreographies used in the paper

*** For papper
example-figures/* - auto-generated results of repairing choreographies in examples folder


To Execute
----------

- open repair.P in edit mode and uncomment one of the load_dyn commands present at the top of the file
  - this will allow to load one of the example choreographies present ./examples folder
- execute xsb
- compile repair.P using 
  ?- [repair].
- invoke test in repair.P using
  ?- check(N).
 - N = 0 ******************
  ** this may prompt user to pick whether user wants to relax/restrict as part of repair: choose by simply writing "add." or "remove."
     at the prompt and press ENTER
  ** at every iteration of repair, user may be also prompted to continue: to continue simple write "1." and press ENTER.

  - Once the repair is complete or the user decides not to continue, the program will terminate.

 - N = 1 ******************
  ** repair by relaxation, user is not prompted

 - N = 2 ******************
  ** repair by restriction, user is not prompted
 

***** MODIFICATIONS 7/17 
  Instead of check, you can now invoke 
  ?- checkPref(M, N)
  - N is same as above 
  - M = 0 ********************
    ** No pdf will be generated
  - M = 1 ********************
    ** pdf will be generated


  Self-loops in the repaired choreography are shown in purple-colored edges

Outputs
-------

In addition of compiled version of prolog files (*.xwam), there are several files created by the software 
- specold: dot formatted file containing the given choreography description
- specold.pdf: pdf figure of the given choreography description (generated from specold)
- specnew: dot formatted file containing the repaired choreography desciption 
- specnew.pdf: pdf figure of the repaired choreography description (generated from specnew)
- peersold: dot formatted file containing the peers projected from the given choreography
- peersold.pdf: pdf generated from the peersold
- peersdold.pdf: determinized
- peersnew: dot formatted file containing the peers projected from the repaired choreography
- peersnew.pdf: pdf generated from the peersnew 
- peersdnew.pdf: determized version  
