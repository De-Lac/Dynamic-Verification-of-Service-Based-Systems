package it.unicam.cassandra.example.sso.contract.idp;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2015-01-22T13:03:00.737+01:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "IdpService", 
                  wsdlLocation = "classpath:Idp.wsdl",
                  targetNamespace = "http://www.unicam.it/cassandra/example/sso/contract/Idp") 
public class IdpService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.unicam.it/cassandra/example/sso/contract/Idp", "IdpService");
    public final static QName IdpPort = new QName("http://www.unicam.it/cassandra/example/sso/contract/Idp", "IdpPort");
    static {
        URL url = IdpService.class.getClassLoader().getResource("Idp.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(IdpService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:Idp.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public IdpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public IdpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IdpService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public IdpService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public IdpService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public IdpService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns IdpPortType
     */
    @WebEndpoint(name = "IdpPort")
    public IdpPortType getIdpPort() {
        return super.getPort(IdpPort, IdpPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IdpPortType
     */
    @WebEndpoint(name = "IdpPort")
    public IdpPortType getIdpPort(WebServiceFeature... features) {
        return super.getPort(IdpPort, IdpPortType.class, features);
    }

}
